# .github/workflows/build.yml
name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build React app
      run: npm run build
      
    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run electron:build -- --publish=never
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: npm run electron:build -- --publish=never
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        
    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: npm run electron:build -- --publish=never
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        
    # Upload only installer files, not the entire dist folder
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: |
          dist/*.exe
          dist/*.msi
          
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-installer
        path: |
          dist/*.dmg
          dist/*.pkg
          
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-installer
        path: |
          dist/*.AppImage
          dist/*.deb
          dist/*.rpm
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          *.exe
          *.msi
          *.dmg
          *.pkg
          *.AppImage
          *.deb
          *.rpm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}